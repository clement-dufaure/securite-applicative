
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Utilisation de H2 en memoire pour la demo
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

spring.security.oauth2.client.registration.myauthserver.client-id=localhost-frontend
spring.security.oauth2.client.registration.myauthserver.client-secret=
spring.security.oauth2.client.registration.myauthserver.scope=openid,profile
# WARN : to be rewritten in security configuration if oidcUser is customized !
spring.security.oauth2.client.provider.myauthserver.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.myauthserver.issuer-uri=http://localhost:8180/realms/test
#spring.security.oauth2.client.provider.myauthserver.authorization-uri=http://localhost:8180/realms/test/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.myauthserver.token-uri=http://localhost:8180/realms/test/protocol/openid-connect/token
#spring.security.oauth2.client.provider.myauthserver.user-info-uri=http://localhost:8180/realms/test/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.myauthserver.jwk-set-uri=http://localhost:8180/realms/test/protocol/openid-connect/certs



