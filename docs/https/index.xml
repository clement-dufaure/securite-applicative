<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Https on</title><link>https://securite-applicative.dufau.re/docs/https/</link><description>Recent content in Https on</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><atom:link href="https://securite-applicative.dufau.re/docs/https/index.xml" rel="self" type="application/rss+xml"/><item><title>Fontionnement de https</title><link>https://securite-applicative.dufau.re/docs/https/fonctionnement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://securite-applicative.dufau.re/docs/https/fonctionnement/</guid><description>2 # Mise en place de HTTPS # Les grands principes # HTTPS intervient dans :
Intégrité Confidentialité Authentification Les grands principes # HTTP protocole purement applicatif &amp;ldquo;Web&amp;rdquo; : toutes données échangées sont en clair Protocole SSL ou TLS (le nom dépend de la version) : gestion d&amp;rsquo;un tunnel sécurisé Des protocoles purement fonctionnels (HTTP,FTP,SMTP,&amp;hellip;) peuvent se sécuriser simplement en s&amp;rsquo;échangeant dans un tunnel SSL HTTPS = HTTP + SSL Proposer HTTPS # Avoir un listener dédié au HTTPS (sur le port 443 dans une configuration standard) : le HTTPS est &amp;ldquo;implicite&amp;rdquo; Avoir une configuration HTTPS minimale, soit un couple clé privée/clé publique Echange sécurisé # Les deux parties, client et serveur, doivent se mettre d&amp;rsquo;accord sur une clé symétrique Il existe des méthode pour communiquer sur un réseau en clair une clé symétrique secrète, qui sera en fait partiellement généré par les deux parties (Algorithme de Diffie-Hellman) A quoi sert la clé asymétrique alors ?</description></item><item><title>Mise en pratique de https</title><link>https://securite-applicative.dufau.re/docs/https/pratique/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://securite-applicative.dufau.re/docs/https/pratique/</guid><description>Générer un certificat # Les étapes :
Générer une clé privée Calculer la clé publique à partir de la clé privée Enrober la clé publique dans une demande de certificat Signer la demande de certificat (facultatif) Générer le bon format d&amp;rsquo;échange Qui signe ?
Une autorité payante Let&amp;rsquo;s encrypt Nous-même dans le cadre de l&amp;rsquo;exercice ! Certifcat dit autosigné, ici généré pour localhost, signé par localhost # On génère une clé privée openssl genrsa 2048 &amp;gt; server.</description></item></channel></rss>